//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.1
//     from Assets/[Scripts]/ActionInputs/Inputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Inputs : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Inputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Inputs"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""d3f71a8f-7497-49c8-8098-7f36ec9a6db3"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""e7f5e651-cc2a-4f7c-8f7a-706d033bea4c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""676a26f0-8abe-4313-afe7-55e37000a8ec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MainMouseDown"",
                    ""type"": ""Value"",
                    ""id"": ""2019ea57-84f1-4863-94d2-168e15ed882b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""OffMouseDown"",
                    ""type"": ""Value"",
                    ""id"": ""1632bc65-06ad-4f92-b756-bc62c7799174"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ChangeWep1"",
                    ""type"": ""Button"",
                    ""id"": ""a88fc14c-cbe1-49e3-be87-f7e35c5552c5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeWep2"",
                    ""type"": ""Button"",
                    ""id"": ""68031ed0-f744-47ea-9a95-91b9a93801c8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeWep3"",
                    ""type"": ""Button"",
                    ""id"": ""bbdb82c9-e98c-4b5e-b267-f4eb9d289871"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeWep4"",
                    ""type"": ""Button"",
                    ""id"": ""6745d010-a870-4842-9577-188baa0659d4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3ce572f4-990f-48ba-b02d-c3279172bc66"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""8c2e17e8-70fd-4b6b-9c11-bfe9260bccec"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3eed2b29-b2ee-43eb-9dad-df72b80d651d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6cf357ec-9a4f-4d69-abee-83d5a78f34d9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1fb4e0a7-30b2-43a3-84e5-f7a9eda1ef8b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2acc1c21-d572-441d-9bcb-83d1679b62d1"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""3f9f83f8-3266-4bb3-b81d-eccf5bdb1da6"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a73e6392-904a-4f62-b689-e48b7c5f72e1"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""99e3c760-afa3-4720-8d19-c894e0aff4be"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""019f5657-524e-463c-9924-47ab3f385957"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""30bc1fdd-4fa1-4683-81ec-af2bcdc1b66f"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d41bc529-ac8f-4fbb-b53a-a7f692b01a14"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainMouseDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1ed0642-5ad4-432d-b814-e1b0520ce171"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OffMouseDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a374e23-7711-4e17-bbff-4888c5aa4dd4"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeWep1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d7724dca-ccfe-45c5-977b-675c732ff0d3"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeWep2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e78ac6b-1f0f-464d-8f8e-bfdae01c3360"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeWep3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d0018b6-e6a5-479b-b5a7-a84e92b04180"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeWep4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Camera"",
            ""id"": ""08fd95ac-0f15-4cff-b494-d9d7d8e1b098"",
            ""actions"": [
                {
                    ""name"": ""Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""93ff240f-aabc-47de-a3ea-8a9ee3fcae91"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ea2db00b-d546-4286-83d3-d28939734e35"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""7c429807-03a8-47ed-8507-d63499a08a50"",
            ""actions"": [
                {
                    ""name"": ""InventoryButton"",
                    ""type"": ""Button"",
                    ""id"": ""61ddd9b2-1803-4f31-bc53-71978174331c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quit"",
                    ""type"": ""Button"",
                    ""id"": ""b90cfbfe-4dea-4bcb-9270-037e4e8bf8f0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BuildMenuButton"",
                    ""type"": ""Button"",
                    ""id"": ""3f31b532-eac5-4fb8-ad31-820de2328256"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerStatsButton"",
                    ""type"": ""Button"",
                    ""id"": ""7acc09e3-5e8f-4c9b-b4de-4a311e0cce37"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""509d7a07-20e7-4ea2-b425-37950229cfe5"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InventoryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c7b6a830-a516-4002-a948-f9a16917bd5a"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20cec4f2-f2ca-473b-84ce-5f40ae3ddc7e"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BuildMenuButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cdc8ef06-839f-4d46-a5b6-c281d9471177"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerStatsButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_MainMouseDown = m_Player.FindAction("MainMouseDown", throwIfNotFound: true);
        m_Player_OffMouseDown = m_Player.FindAction("OffMouseDown", throwIfNotFound: true);
        m_Player_ChangeWep1 = m_Player.FindAction("ChangeWep1", throwIfNotFound: true);
        m_Player_ChangeWep2 = m_Player.FindAction("ChangeWep2", throwIfNotFound: true);
        m_Player_ChangeWep3 = m_Player.FindAction("ChangeWep3", throwIfNotFound: true);
        m_Player_ChangeWep4 = m_Player.FindAction("ChangeWep4", throwIfNotFound: true);
        // Camera
        m_Camera = asset.FindActionMap("Camera", throwIfNotFound: true);
        m_Camera_Scroll = m_Camera.FindAction("Scroll", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_InventoryButton = m_UI.FindAction("InventoryButton", throwIfNotFound: true);
        m_UI_Quit = m_UI.FindAction("Quit", throwIfNotFound: true);
        m_UI_BuildMenuButton = m_UI.FindAction("BuildMenuButton", throwIfNotFound: true);
        m_UI_PlayerStatsButton = m_UI.FindAction("PlayerStatsButton", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_MainMouseDown;
    private readonly InputAction m_Player_OffMouseDown;
    private readonly InputAction m_Player_ChangeWep1;
    private readonly InputAction m_Player_ChangeWep2;
    private readonly InputAction m_Player_ChangeWep3;
    private readonly InputAction m_Player_ChangeWep4;
    public struct PlayerActions
    {
        private @Inputs m_Wrapper;
        public PlayerActions(@Inputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @MainMouseDown => m_Wrapper.m_Player_MainMouseDown;
        public InputAction @OffMouseDown => m_Wrapper.m_Player_OffMouseDown;
        public InputAction @ChangeWep1 => m_Wrapper.m_Player_ChangeWep1;
        public InputAction @ChangeWep2 => m_Wrapper.m_Player_ChangeWep2;
        public InputAction @ChangeWep3 => m_Wrapper.m_Player_ChangeWep3;
        public InputAction @ChangeWep4 => m_Wrapper.m_Player_ChangeWep4;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @MainMouseDown.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMainMouseDown;
                @MainMouseDown.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMainMouseDown;
                @MainMouseDown.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMainMouseDown;
                @OffMouseDown.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOffMouseDown;
                @OffMouseDown.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOffMouseDown;
                @OffMouseDown.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOffMouseDown;
                @ChangeWep1.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWep1;
                @ChangeWep1.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWep1;
                @ChangeWep1.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWep1;
                @ChangeWep2.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWep2;
                @ChangeWep2.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWep2;
                @ChangeWep2.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWep2;
                @ChangeWep3.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWep3;
                @ChangeWep3.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWep3;
                @ChangeWep3.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWep3;
                @ChangeWep4.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWep4;
                @ChangeWep4.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWep4;
                @ChangeWep4.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWep4;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @MainMouseDown.started += instance.OnMainMouseDown;
                @MainMouseDown.performed += instance.OnMainMouseDown;
                @MainMouseDown.canceled += instance.OnMainMouseDown;
                @OffMouseDown.started += instance.OnOffMouseDown;
                @OffMouseDown.performed += instance.OnOffMouseDown;
                @OffMouseDown.canceled += instance.OnOffMouseDown;
                @ChangeWep1.started += instance.OnChangeWep1;
                @ChangeWep1.performed += instance.OnChangeWep1;
                @ChangeWep1.canceled += instance.OnChangeWep1;
                @ChangeWep2.started += instance.OnChangeWep2;
                @ChangeWep2.performed += instance.OnChangeWep2;
                @ChangeWep2.canceled += instance.OnChangeWep2;
                @ChangeWep3.started += instance.OnChangeWep3;
                @ChangeWep3.performed += instance.OnChangeWep3;
                @ChangeWep3.canceled += instance.OnChangeWep3;
                @ChangeWep4.started += instance.OnChangeWep4;
                @ChangeWep4.performed += instance.OnChangeWep4;
                @ChangeWep4.canceled += instance.OnChangeWep4;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Camera
    private readonly InputActionMap m_Camera;
    private ICameraActions m_CameraActionsCallbackInterface;
    private readonly InputAction m_Camera_Scroll;
    public struct CameraActions
    {
        private @Inputs m_Wrapper;
        public CameraActions(@Inputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Scroll => m_Wrapper.m_Camera_Scroll;
        public InputActionMap Get() { return m_Wrapper.m_Camera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraActions set) { return set.Get(); }
        public void SetCallbacks(ICameraActions instance)
        {
            if (m_Wrapper.m_CameraActionsCallbackInterface != null)
            {
                @Scroll.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnScroll;
                @Scroll.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnScroll;
                @Scroll.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnScroll;
            }
            m_Wrapper.m_CameraActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Scroll.started += instance.OnScroll;
                @Scroll.performed += instance.OnScroll;
                @Scroll.canceled += instance.OnScroll;
            }
        }
    }
    public CameraActions @Camera => new CameraActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_InventoryButton;
    private readonly InputAction m_UI_Quit;
    private readonly InputAction m_UI_BuildMenuButton;
    private readonly InputAction m_UI_PlayerStatsButton;
    public struct UIActions
    {
        private @Inputs m_Wrapper;
        public UIActions(@Inputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @InventoryButton => m_Wrapper.m_UI_InventoryButton;
        public InputAction @Quit => m_Wrapper.m_UI_Quit;
        public InputAction @BuildMenuButton => m_Wrapper.m_UI_BuildMenuButton;
        public InputAction @PlayerStatsButton => m_Wrapper.m_UI_PlayerStatsButton;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @InventoryButton.started -= m_Wrapper.m_UIActionsCallbackInterface.OnInventoryButton;
                @InventoryButton.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnInventoryButton;
                @InventoryButton.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnInventoryButton;
                @Quit.started -= m_Wrapper.m_UIActionsCallbackInterface.OnQuit;
                @Quit.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnQuit;
                @Quit.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnQuit;
                @BuildMenuButton.started -= m_Wrapper.m_UIActionsCallbackInterface.OnBuildMenuButton;
                @BuildMenuButton.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnBuildMenuButton;
                @BuildMenuButton.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnBuildMenuButton;
                @PlayerStatsButton.started -= m_Wrapper.m_UIActionsCallbackInterface.OnPlayerStatsButton;
                @PlayerStatsButton.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnPlayerStatsButton;
                @PlayerStatsButton.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnPlayerStatsButton;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @InventoryButton.started += instance.OnInventoryButton;
                @InventoryButton.performed += instance.OnInventoryButton;
                @InventoryButton.canceled += instance.OnInventoryButton;
                @Quit.started += instance.OnQuit;
                @Quit.performed += instance.OnQuit;
                @Quit.canceled += instance.OnQuit;
                @BuildMenuButton.started += instance.OnBuildMenuButton;
                @BuildMenuButton.performed += instance.OnBuildMenuButton;
                @BuildMenuButton.canceled += instance.OnBuildMenuButton;
                @PlayerStatsButton.started += instance.OnPlayerStatsButton;
                @PlayerStatsButton.performed += instance.OnPlayerStatsButton;
                @PlayerStatsButton.canceled += instance.OnPlayerStatsButton;
            }
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMainMouseDown(InputAction.CallbackContext context);
        void OnOffMouseDown(InputAction.CallbackContext context);
        void OnChangeWep1(InputAction.CallbackContext context);
        void OnChangeWep2(InputAction.CallbackContext context);
        void OnChangeWep3(InputAction.CallbackContext context);
        void OnChangeWep4(InputAction.CallbackContext context);
    }
    public interface ICameraActions
    {
        void OnScroll(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnInventoryButton(InputAction.CallbackContext context);
        void OnQuit(InputAction.CallbackContext context);
        void OnBuildMenuButton(InputAction.CallbackContext context);
        void OnPlayerStatsButton(InputAction.CallbackContext context);
    }
}
